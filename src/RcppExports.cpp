// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_dugompertz
NumericVector cpp_dugompertz(const NumericVector x, const NumericVector mu, const NumericVector theta, const NumericVector tau, const bool logprob);
RcppExport SEXP _ugomquantreg_cpp_dugompertz(SEXP xSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP logprobSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< const bool >::type logprob(logprobSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_dugompertz(x, mu, theta, tau, logprob));
    return rcpp_result_gen;
END_RCPP
}
// cpp_pugompertz
NumericVector cpp_pugompertz(const NumericVector x, const NumericVector mu, const NumericVector theta, const NumericVector tau, const bool lowertail, const bool logprob);
RcppExport SEXP _ugomquantreg_cpp_pugompertz(SEXP xSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP lowertailSEXP, SEXP logprobSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< const bool >::type lowertail(lowertailSEXP);
    Rcpp::traits::input_parameter< const bool >::type logprob(logprobSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_pugompertz(x, mu, theta, tau, lowertail, logprob));
    return rcpp_result_gen;
END_RCPP
}
// cpp_qugompertz
NumericVector cpp_qugompertz(const NumericVector x, const NumericVector mu, const NumericVector theta, const NumericVector tau, const bool lowertail, const bool logprob);
RcppExport SEXP _ugomquantreg_cpp_qugompertz(SEXP xSEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP lowertailSEXP, SEXP logprobSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< const bool >::type lowertail(lowertailSEXP);
    Rcpp::traits::input_parameter< const bool >::type logprob(logprobSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_qugompertz(x, mu, theta, tau, lowertail, logprob));
    return rcpp_result_gen;
END_RCPP
}
// cpp_dmu
NumericVector cpp_dmu(const NumericVector x, const NumericVector mu, const NumericVector sigma, const NumericVector nu);
RcppExport SEXP _ugomquantreg_cpp_dmu(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_dmu(x, mu, sigma, nu));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ugomquantreg_cpp_dugompertz", (DL_FUNC) &_ugomquantreg_cpp_dugompertz, 5},
    {"_ugomquantreg_cpp_pugompertz", (DL_FUNC) &_ugomquantreg_cpp_pugompertz, 6},
    {"_ugomquantreg_cpp_qugompertz", (DL_FUNC) &_ugomquantreg_cpp_qugompertz, 6},
    {"_ugomquantreg_cpp_dmu", (DL_FUNC) &_ugomquantreg_cpp_dmu, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_ugomquantreg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
